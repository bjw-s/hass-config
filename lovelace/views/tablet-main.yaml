title: Main
path: main
id: main
type: custom:grid-layout
layout: !include snippets/layout-3-column.yaml

cards:
  - type: markdown
    view_layout:
      grid-column: 1 / -1
    card_mod:
      style: !include snippets/style-markdown-titles.yaml
    content: >
      # {{ now().timestamp() | timestamp_custom('%H:%M, %B %-d %Y') }}

  - type: vertical-stack
    cards:
      - type: markdown
        card_mod:
          style: !include snippets/style-markdown-titles.yaml
        content: >
          ### â€Ž

      - type: grid
        columns: 2
        square: true
        cards:
          - type: custom:mushroom-template-card
            entity: alarm_control_panel.house
            layout: vertical
            icon: >
              {{ state_attr(entity, "icon") }}
            icon_color: >
              {% if is_state(entity, 'arming') %}
                var(--rgb-mdc-ripple-color)
              {% else %}
                var(--rgb-primary-background-color)
              {% endif %}
            primary: Alarm
            secondary: >
              {{ states(entity) | capitalize }}
            fill_container: true
            tap_action: !include popups/alarm.yaml
            card_mod:
              style: |
                ha-card {
                  --primary-text-color:
                    {% if is_state(config.entity, 'arming') %}
                      var(--mdc-ripple-color)
                    {% else %}
                      var(--primary-background-color)
                    {% endif %};
                  --secondary-text-color:
                    {% if is_state(config.entity, 'arming') %}
                      var(--mdc-ripple-color)
                    {% else %}
                      var(--primary-background-color)
                    {% endif %};
                  --ha-card-background:
                    {% if is_state(config.entity, 'disarmed') %}
                      var(--success-color)
                    {% elif is_state(config.entity, 'arming') %}
                      var(--warning-color)
                    {% elif is_state(config.entity, ['armed_away', 'armed_night', 'armed_home']) %}
                      var(--error-color)
                    {% else %}
                      var(--ha-card-background)
                    {% endif %};
                }

          - type: custom:mushroom-entity-card
            entity: input_boolean.home_modes_bedtime_mode
            name: Bedtime
            icon: mdi:sleep
            layout: vertical
            secondary_info: state
            fill_container: true
            tap_action:
              action: toggle
              confirmation:
                text: Are you sure you want to toggle Bedtime Mode?

          - type: custom:mushroom-entity-card
            entity: sensor.home_outdoor_temperature
            name: Outside temperature
            icon: mdi:thermometer
            layout: vertical
            primary_info: state
            secondary_info: name
            fill_container: true
            tap_action:
              action: none

  - type: vertical-stack
    cards:
      # - type: markdown
      #   style: !include snippets/style-markdown-titles.yaml
      #   content: >
      #     ### Trash

      - type: markdown
        card_mod:
          style: !include snippets/style-markdown-titles.yaml
        content: >
          ### Trash

      - type: grid
        columns: 2
        square: true
        cards:
          - type: custom:mushroom-template-card
            entity: sensor.afvalwijzer_restafval
            layout: vertical
            primary: Restafval
            secondary: >
              {{ states(entity) }}
            fill_container: true
            tap_action: none
            icon: mdi:trash-can
            icon_color: >
              {% if states('sensor.afvalwijzer_today') == (entity | replace('sensor.afvalwijzer_', '')) %}
                var(--rgb-error-color)
              {% elif states('sensor.afvalwijzer_tomorrow') == (entity | replace('sensor.afvalwijzer_', '')) %}
                var(--rgb-warning-color)
              {% else %}
                var(--rgb-disabled-color)
              {% endif %}

          - type: custom:mushroom-template-card
            entity: sensor.afvalwijzer_gft
            layout: vertical
            primary: GFT
            secondary: >
              {{ states(entity) }}
            fill_container: true
            tap_action: none
            icon: mdi:food-apple
            icon_color: >
              {% if states('sensor.afvalwijzer_today') == (entity | replace('sensor.afvalwijzer_', '')) %}
                var(--rgb-error-color)
              {% elif states('sensor.afvalwijzer_tomorrow') == (entity | replace('sensor.afvalwijzer_', '')) %}
                var(--rgb-warning-color)
              {% else %}
                var(--rgb-disabled-color)
              {% endif %}

          - type: custom:mushroom-template-card
            entity: sensor.afvalwijzer_pmd
            layout: vertical
            primary: PMD
            secondary: >
              {{ states(entity) }}
            fill_container: true
            tap_action: none
            icon: mdi:bottle-soda
            icon_color: >
              {% if states('sensor.afvalwijzer_today') == (entity | replace('sensor.afvalwijzer_', '')) %}
                var(--rgb-error-color)
              {% elif states('sensor.afvalwijzer_tomorrow') == (entity | replace('sensor.afvalwijzer_', '')) %}
                var(--rgb-warning-color)
              {% else %}
                var(--rgb-disabled-color)
              {% endif %}

          - type: custom:mushroom-entity-card
            entity: sensor.afvalwijzer_papier
            name: Papier
            icon: mdi:file
            icon_color: var(--rgb-disabled-color)
            layout: vertical
            fill_container: true
            tap_action: none
            card_mod:
              style: |
                ha-card {
                  --ha-card-background:
                    {% if states('sensor.afvalwijzer_today') == (config.entity | lower) %}
                      #FF6666
                    {% elif states('sensor.afvalwijzer_tomorrow') == (config.entity | lower) %}
                      #FF9D44
                    {% else %}
                      var(--ha-card-background)
                    {% endif %};
                }

  - type: vertical-stack
    cards:
      # - type: markdown
      #   style: !include snippets/style-markdown-titles.yaml
      #   content: >
      #     ### Devices

      - type: markdown
        card_mod:
          style: !include snippets/style-markdown-titles.yaml
        content: >
          ### Devices

      - type: grid
        columns: 2
        cards:
          - type: custom:mushroom-template-card
            entity: vacuum.valetudo_livingroom
            layout: vertical
            fill_container: true
            primary: >
              {{ state_attr(entity, 'friendly_name') }}
            secondary: >
              {{ states(entity) | capitalize }}
            icon: mdi:robot-vacuum
            icon_color: >
              {% if is_state(entity, 'cleaning') %}
                var(--mdc-ripple-color)
              {% endif %}
            tap_action:
              action: more-info
            card_mod:
              style: |
                ha-card {
                  --primary-text-color:
                    {% if is_state(config.entity, 'cleaning') %}
                      var(--primary-background-color)
                    {% endif %};
                  --secondary-text-color:
                    {% if is_state(config.entity, 'cleaning') %}
                      var(--primary-background-color)
                    {% endif %};
                  --ha-card-background:
                    {% if is_state(config.entity, 'cleaning') %}
                      var(--warning-color)
                    {% else %}
                      var(--ha-card-background)
                    {% endif %};
                }

          - type: custom:mushroom-template-card
            entity: vacuum.valetudo_upstairs
            layout: vertical
            fill_container: true
            primary: >
              {{ state_attr(entity, 'friendly_name') }}
            secondary: >
              {{ states(entity) | capitalize }}
            icon: mdi:robot-vacuum
            icon_color: >
              {% if is_state(entity, 'cleaning') %}
                var(--mdc-ripple-color)
              {% endif %}
            tap_action:
              action: more-info
            card_mod:
              style: |
                ha-card {
                  --primary-text-color:
                    {% if is_state(config.entity, 'cleaning') %}
                      var(--primary-background-color)
                    {% endif %};
                  --secondary-text-color:
                    {% if is_state(config.entity, 'cleaning') %}
                      var(--primary-background-color)
                    {% endif %};
                  --ha-card-background:
                    {% if is_state(config.entity, 'cleaning') %}
                      var(--warning-color)
                    {% else %}
                      var(--ha-card-background)
                    {% endif %};
                }
